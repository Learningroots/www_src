@model CategoryModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;
}
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;
@*category breadcrumb*@

@if (Model.DisplayCategoryBreadcrumb)
{
    <div class="breadcrumb">
        <ul>
            <li><a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
                <span class="delimiter">@breadcrumbDelimiter</span> </li>
            @foreach (var cat in Model.CategoryBreadcrumb)
            {
                var isLastCategory = cat.Id == Model.Id;
                <li>
                    @if (isLastCategory)
                    {
                        <strong class="current-item">@cat.Name</strong>
                    }
                    else
                    {
                        <a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a>
                        <span class="delimiter">@breadcrumbDelimiter</span>
                    }
                </li>
            }
        </ul>
    </div>
    @Html.Widget("categorydetails_after_breadcrumb", Model.Id)
}
<div class="page category-page">
    <div class="page-title">
        @if (Model.SubCategories.Count > 0)
        {
            <h1>@Html.Raw(Model.SubCategories.Count) categories in @Model.Name</h1>
        }
        else
        {
            <h1>@Html.Raw(Model.ProductTotalCount) products in @Model.Name</h1>
        }

        @*sorting*@
        @if (Model.PagingFilteringContext.AllowProductSorting && Model.Products.Count > 0)
        {
            <div class="product-sorting">
                <span>@T("Catalog.OrderBy") </span> 
                @Html.DropDownList("products-orderby", Model.PagingFilteringContext.AvailableSortOptions, new { onchange = "setLocation(this.value);" })
            </div>
        }
    </div>
    <div class="page-body">
        @Html.Widget("categorydetails_top", Model.Id)
        

        @Html.Widget("categorydetails_before_subcategories", Model.Id)
        @*subcategories*@
        @if (Model.SubCategories.Count > 0)
        {
            <h2 class="page-sub-heading">Select one of the following category</h2>
            
            <div class="sub-category-grid">
                @foreach (var item in Model.SubCategories)
                {
                    <div class="item-box">
                        <div class="sub-category-item">
                            <div class="picture">
                                <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                    <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl"
                                         title="@item.PictureModel.Title" /></a>
                            </div>
                            <h2 class="title">
                                <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                    @item.Name</a>
                            </h2>
                        </div>
                    </div>
                }
            </div>
        }
        @Html.Widget("categorydetails_before_featured_products", Model.Id)
        @*featured products*@
        @if (Model.FeaturedProducts.Count > 0)
        {
            <div class="product-grid featured-product-grid">
                <div class="title">
                    <strong>@T("Products.FeaturedProducts")</strong>
                </div>
                <div>
                    @foreach (var item in Model.FeaturedProducts)
                    {
                        <div class="item-box">
                            @Html.Partial("_ProductBox", item)
                        </div>
                    }
                </div>
            </div>
        }
        @Html.Widget("categorydetails_after_featured_products", Model.Id)

        @Html.Widget("categorydetails_before_filters", Model.Id)

        @Html.Widget("categorydetails_before_product_list", Model.Id)
        @*product list*@
        @if (Model.Products.Count > 0)
        {
            if (Model.PagingFilteringContext.ViewMode == "list")
            {
            @*list mode*@
            <div class="product-list">
                @foreach (var product in Model.Products)
                {
                    <div class="item-box">
                        @Html.Partial("_ProductBox", product)
                    </div>
                }
            </div>       
            }
            else
            {
            @*grid mode*@
            <div class="product-grid">
                @foreach (var product in Model.Products)
                {
                    <div class="item-box">
                        @Html.Partial("_ProductBox", product)
                    </div>
                }
            </div>
            }
        }

        <div class="seo-text">
            Learning Roots creates premium Islamic educational resources designed to nurture, inspire and educate Muslim children about Islam. Our books, puzzles, flashcards, maps and other publications have been engineered to endear the hearts with the love of Allah, the Prophet Muhammad (S), the Prophets and Messengers of Allah, the Quran, the Companions and practice of Islam and in its entire holistic sense, not least the acts of worship such as salah (the prayer), zakat (charity), fasting in the month of Ramadan and performing Hajj. 
        </div>

        <div class="pager">
            @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber")
        </div>
        @Html.Widget("categorydetails_bottom", Model.Id)
    </div>
</div>

<script>
    var $items = $('.product-grid .product-item');
    if($items.length == 0) $items = $('.sub-category-grid .sub-category-item');
    var highest = 0;
    $items.each(function(i){
        $this = $(this);
        var j = i+1;
        if(j % 3 == 0) $this.addClass('product-item-third');
        if($this.height() > highest) highest = $this.height();
    });
    $items.height(highest);

    //display discount message after 6 items or before
    var $items = $('.product-grid .product-item');
    if($items.length > 0 && $('.top-message-special').length != 0) {
        var $_msg_clone = $('.top-message-special').clone();
            $_msg_clone.find('span').remove();
        var _discount_msg = $_msg_clone.text();

        var discountMsg = '<div class="product-discount-message">'+_discount_msg+'</div>';
        if($items.length <= 6) {
            $items.last().closest('.item-box').after(discountMsg);
        }
        else {
            $items.eq(5).closest('.item-box').after(discountMsg);
        }
        discountMsg = null;
    }

    $items = highest = null;
</script>
